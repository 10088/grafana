// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/grafana/grafana/pkg/services/live/features (interfaces: LiveChannelStore)

// Package features is a generated GoMock package.
package features

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/grafana/grafana/pkg/models"
)

// MockLiveChannelStore is a mock of LiveChannelStore interface.
type MockLiveChannelStore struct {
	ctrl     *gomock.Controller
	recorder *MockLiveChannelStoreMockRecorder
}

// MockLiveChannelStoreMockRecorder is the mock recorder for MockLiveChannelStore.
type MockLiveChannelStoreMockRecorder struct {
	mock *MockLiveChannelStore
}

// NewMockLiveChannelStore creates a new mock instance.
func NewMockLiveChannelStore(ctrl *gomock.Controller) *MockLiveChannelStore {
	mock := &MockLiveChannelStore{ctrl: ctrl}
	mock.recorder = &MockLiveChannelStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLiveChannelStore) EXPECT() *MockLiveChannelStoreMockRecorder {
	return m.recorder
}

// GetLiveChannel mocks base method.
func (m *MockLiveChannelStore) GetLiveChannel(arg0 *models.GetLiveChannelQuery) (models.LiveChannel, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLiveChannel", arg0)
	ret0, _ := ret[0].(models.LiveChannel)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetLiveChannel indicates an expected call of GetLiveChannel.
func (mr *MockLiveChannelStoreMockRecorder) GetLiveChannel(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLiveChannel", reflect.TypeOf((*MockLiveChannelStore)(nil).GetLiveChannel), arg0)
}

// SaveLiveChannelData mocks base method.
func (m *MockLiveChannelStore) SaveLiveChannelData(arg0 *models.SaveLiveChannelDataQuery) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveLiveChannelData", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveLiveChannelData indicates an expected call of SaveLiveChannelData.
func (mr *MockLiveChannelStoreMockRecorder) SaveLiveChannelData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveLiveChannelData", reflect.TypeOf((*MockLiveChannelStore)(nil).SaveLiveChannelData), arg0)
}
